//* ======================================================
//*                   GETELEMENTBYID()
//* ======================================================


//*example1 (buton style)

 const buton= document.getElementById("btn")
  
buton.style.width="200px";
buton.style.height="80px";
buton.style.fontSize="40px"
buton.style.color="yellow";
buton.style.backgroundColor="red"

//*example2 (paragraf style)

const paragraf=  document.getElementById("par")

paragraf.style.backgroundColor="gray"
paragraf.style.color="orange"
paragraf.style.fontSize="50px"
paragraf.style.padding="5px"

//* ======================================================
//*                   GETELEMENTSBYTAGNAME()
//* tag ismiyle Ã§aÄŸÄ±rÄ±yoruz.aynÄ± tag den Ã§ok olacaÄŸÄ± iÃ§in index le hangisini seÃ§tiÄŸimizi belirtiyoruz (HTMLCollection- Array Ã¶zellikleri gÃ¶sterir)
//*================================================

//*example3 (img style)

const resim= document.getElementsByTagName("img")
console.log(resim);//HTMLCollection

resim[0].style.width="300px"
resim[1].style.border="5px solid red"

//* ======================================================
//*                   GETELEMENTSBYCLASSNAME()
//* class ismiyle Ã§aÄŸÄ±rÄ±yoruz
//*======================================================

const baslik= document.getElementsByClassName("H1")

console.log(baslik);//HTMLCollection

baslik[0].style.color="red"
baslik[1].style.textAlign="center"


//*array i deÄŸiÅŸtirmeyen metodlarÄ± kullanabilirsiniz

for(let i=0; i < baslik.length; i++){

    baslik[i].style.color="purple";
    baslik[i].style.fontSize="50px"
}

 baslik[0].innerHTML = "<a href= 'https://www.clarusway.com'>DOM Ã‡OK KOLAY</a>";
//*  DOM SELECTOR yazan h1 etiketini, DOM Ã‡OK KOLAY yazan a etiketiyle deÄŸiÅŸtirdim
//  baslik[1].innerHTML="NAPIYORSUN"
baslik[1].textContent="Ä°YÄ°MÄ°SÄ°N"
//* sadece iÃ§erik deÄŸiÅŸecekse textContent tercih edilir, ama innerHTML de etiketi deÄŸiÅŸtirebildiÄŸi gibi, iÃ§eriÄŸi de deÄŸiÅŸtirebilir

//* ======================================================
//*                  QUERYSELECTOR,QUERYSELECTORALL
//*======================================================

document.querySelector("title").textContent="DOM MANÄ°PULATÄ°ON ğŸ’œ"

document.querySelector("#badi").style.backgroundImage="linear-gradient(green,pink)"

document.querySelector(".H2").style.color="pink"

const parag= document.querySelectorAll("p")
console.log(parag);//NodeList

parag[1].style.fontSize="70px"



// Bir NodeList ve bir HTMLcollection hemen hemen aynÄ± ÅŸeydir.

// Her ikisi de bir belgeden Ã§Ä±karÄ±lan dÃ¼ÄŸÃ¼mlerin (Ã¶ÄŸelerin) dizi benzeri koleksiyonlarÄ±dÄ±r (listeleridir). DÃ¼ÄŸÃ¼mlere indeks numaralarÄ± ile eriÅŸilebilir. indeks 0'dan baÅŸlar.

// Her ikisinin de listedeki (koleksiyon) Ã¶ÄŸelerin sayÄ±sÄ±nÄ± dÃ¶ndÃ¼ren bir uzunluk Ã¶zelliÄŸi (length) vardÄ±r.


// HTMLCollection Ã¶ÄŸelerine adlarÄ±, kimlikleri veya dizin numaralarÄ±yla eriÅŸilebilir.
// baslik.namedItem("id1").style.color = "red";
//  baslik[0].style.color="red";

// NodeList Ã¶ÄŸelerine yalnÄ±zca dizin numaralarÄ±yla eriÅŸilebilir.

// Bir HTMLCollection her zaman canlÄ± bir koleksiyondur. Ã–rnek: DOM'daki bir listeye bir <li> Ã¶ÄŸesi eklerseniz, HTMLCollection'daki liste de deÄŸiÅŸecektir.

// Bir NodeList genellikle statik bir koleksiyondur. Ã–rnek: DOM'daki bir listeye bir <li> Ã¶ÄŸesi eklerseniz, NodeList'teki liste deÄŸiÅŸmez.
// getElementsByClassName()ve yÃ¶ntemleri , getElementsByTagName() canlÄ± bir HTMLCollection dÃ¶ndÃ¼rÃ¼r.

// querySelectorAll(), statik bir NodeList dÃ¶ndÃ¼rÃ¼r.
//!burada netten https://softauthor.com/javascript-htmlcollection-vs-nodelist/ adresinden gÃ¶ster
// Dizi DeÄŸil!
// Bir NodeList bir dizi gibi gÃ¶rÃ¼nebilir ama Ã¶yle deÄŸildir.

// Bir NodeList iÃ§inde dÃ¶ngÃ¼ yapabilir ve dÃ¼ÄŸÃ¼mlerine dizine gÃ¶re baÅŸvurabilirsiniz.

// Ancak, bir NodeList'te push(), pop() veya join() gibi Array yÃ¶ntemlerini kullanamazsÄ±nÄ±z.

